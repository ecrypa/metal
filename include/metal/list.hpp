#ifndef METAL_LIST_HPP
#define METAL_LIST_HPP

#include "config.hpp"
#include "list/accumulate.hpp"
#include "list/all_of.hpp"
#include "list/any_of.hpp"
#include "list/append.hpp"
#include "list/at.hpp"
#include "list/back.hpp"
#include "list/cartesian.hpp"
#include "list/cascade.hpp"
#include "list/combine.hpp"
#include "list/contains.hpp"
#include "list/copy.hpp"
#include "list/copy_if.hpp"
#include "list/count.hpp"
#include "list/count_if.hpp"
#include "list/drop.hpp"
#include "list/empty.hpp"
#include "list/erase.hpp"
#include "list/find.hpp"
#include "list/find_if.hpp"
#include "list/flatten.hpp"
#include "list/front.hpp"
#include "list/indices.hpp"
#include "list/insert.hpp"
#include "list/iota.hpp"
#include "list/join.hpp"
#include "list/list.hpp"
#include "list/none_of.hpp"
#include "list/nth_element_list_backpivot.hpp"
#include "list/nth_element_list_frontpivot.hpp"
#include "list/nth_element_list_randpivot.hpp"
#include "list/nth_element_val_backpivot.hpp"
#include "list/nth_element_val_frontpivot.hpp"
#include "list/nth_element_val_randpivot.hpp"
#include "list/nth_element_val_complicated.hpp"
#include "list/partition.hpp"
#include "list/powerset.hpp"
#include "list/prepend.hpp"
#include "list/range.hpp"
#include "list/remove.hpp"
#include "list/remove_if.hpp"
#include "list/repeat.hpp"
#include "list/replace.hpp"
#include "list/replace_if.hpp"
#include "list/reverse.hpp"
#include "list/rotate.hpp"
#include "list/size.hpp"
#include "list/slice.hpp"
#include "list/sort.hpp"
#include "list/splice.hpp"
#include "list/take.hpp"
#include "list/transform.hpp"
#include "list/transpose.hpp"

/// \defgroup list List
/// \ingroup metal

#endif
